import{_ as n,c as s,o as a,a as t}from"./app.378e6094.js";const m='{"title":"Testing","description":"","frontmatter":{},"headers":[],"relativePath":"guide/advanced-testing.md","lastUpdated":1644425477934}',p={},o=t(`<h1 id="testing" tabindex="-1">Testing <a class="header-anchor" href="#testing" aria-hidden="true">#</a></h1><p>If you used the <a href="/guide/installation.html#cli">CLI method</a> to install Minze you can extend your environment with component tests quite quickly by using <a href="https://playwright.dev/" target="_blank" rel="noopener noreferrer">Playwright</a>.</p><blockquote><p>The following guide is based on a fresh Minze CLI installation.</p></blockquote><ol><li>Install <code>@playwright/test</code> and <code>cross-env</code>.</li></ol><div class="language-bash"><pre><code>$ <span class="token function">npm</span> <span class="token function">install</span> -D @playwright/test cross-env
</code></pre></div><ol start="2"><li>Add test scripts to <code>package.json</code>.</li></ol><div class="language-json"><pre><code><span class="token comment">// package.json</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token property">&quot;test&quot;</span><span class="token operator">:</span> <span class="token string">&quot;npx playwright test&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;test-debug&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cross-env PWDEBUG=1 npm test&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><ol start="3"><li>Add a <code>playwright.config.js</code> file to the root directory of your project.</li></ol><div class="language-js"><pre><code><span class="token comment">// playwright.config.js</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  use<span class="token operator">:</span> <span class="token punctuation">{</span>
    baseURL<span class="token operator">:</span> <span class="token string">&#39;http://localhost:3000/tests/&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  webServer<span class="token operator">:</span> <span class="token punctuation">{</span>
    command<span class="token operator">:</span> <span class="token string">&#39;npm run dev&#39;</span><span class="token punctuation">,</span>
    port<span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">,</span>
    reuseExistingServer<span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><ol start="4"><li>Create a new <code>tests/</code> directory with 3 new files: <ul><li><code>index.html</code></li><li><code>vite.js</code></li><li><code>minze-button.spec.js</code></li></ul></li></ol><p>Your project should now look something like this:</p><div class="language-"><pre><code>minze-project/
\u251C\u2500 ...
\u251C\u2500 playwright.config.js
\u251C\u2500 package.json
\u2514\u2500 tests/
   \u251C\u2500 index.html
   \u251C\u2500 minze-button.spec.js
   \u2514\u2500 vite.js
</code></pre></div><ol start="5"><li>Add the following code to your newly created <code>vite.js</code> file to register all components:</li></ol><div class="language-js"><pre><code><span class="token keyword">import</span> Minze <span class="token keyword">from</span> <span class="token string">&#39;minze&#39;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> Elements <span class="token keyword">from</span> <span class="token string">&#39;../src/module&#39;</span>

Minze<span class="token punctuation">.</span><span class="token function">defineAll</span><span class="token punctuation">(</span>Elements<span class="token punctuation">)</span>
</code></pre></div><ol start="6"><li>Add the following code to your newly created <code>index.html</code> file:</li></ol><div class="language-html"><pre><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>module<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./vite.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><ol start="7"><li>Add the following code to your newly created <code>minze-button.spec.js</code> file:</li></ol><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> test<span class="token punctuation">,</span> expect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@playwright/test&#39;</span>

<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;minze-button&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> page <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    node<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;minze-button&gt;&lt;/minze-button&gt;</span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;minze-button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveCount</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// check if element exists</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><ol start="8"><li>Run the test script.</li></ol><div class="language-bash"><pre><code>$ <span class="token function">npm</span> <span class="token builtin class-name">test</span>
<span class="token comment"># or</span>
$ <span class="token function">npm</span> run test-debug
</code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>For more details about Playwright refer to the <a href="https://playwright.dev/" target="_blank" rel="noopener noreferrer">Playwright documentation</a>.</p></div>`,21),e=[o];function c(l,u,i,k,r,d){return a(),s("div",null,e)}var h=n(p,[["render",c]]);export{m as __pageData,h as default};
